<?php

namespace Database\Seeders;

use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;
use App\Models\User;
use App\Models\Role;
use Illuminate\Support\Facades\Hash;

class DefaultAdminSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        // T·∫°o role Admin n·∫øu ch∆∞a c√≥
        $adminRole = Role::firstOrCreate(
            ['role_name' => 'Admin'],
            ['description' => 'Qu·∫£n tr·ªã vi√™n h·ªá th·ªëng']
        );

        // T·∫°o role Member n·∫øu ch∆∞a c√≥
        $memberRole = Role::firstOrCreate(
            ['role_name' => 'Member'],
            ['description' => 'Th√†nh vi√™n']
        );

        // T·∫°o role Manager n·∫øu ch∆∞a c√≥
        $managerRole = Role::firstOrCreate(
            ['role_name' => 'Manager'],
            ['description' => 'Qu·∫£n l√Ω ph√≤ng ban/d·ª± √°n']
        );

        // Ch·ªâ t·∫°o admin v·ªõi email okr.admin@company.com
        $adminUser = User::firstOrCreate(
            ['email' => 'okr.admin@company.com'],
            [
                'full_name' => 'System Administrator',
                'email' => 'okr.admin@company.com',
                'job_title' => 'System Admin',
                'role_id' => $adminRole->role_id,
                'sub' => 'admin-' . time(), // Unique sub for admin
            ]
        );

        // T·∫°o Member cho anh249205@gmail.com
        $memberUser = User::firstOrCreate(
            ['email' => 'anh249205@gmail.com'],
            [
                'full_name' => 'Nguy·ªÖn ƒê√¨nh Tu·∫•n Anh',
                'email' => 'anh249205@gmail.com',
                'job_title' => 'Trader',
                'role_id' => $memberRole->role_id,
                'sub' => 'member-' . time(), // Unique sub for member
            ]
        );

        // ƒê·∫£m b·∫£o admin c√≥ role Admin
        if (!$adminUser->role_id || $adminUser->role_id !== $adminRole->role_id) {
            $adminUser->role_id = $adminRole->role_id;
            $adminUser->save();
        }

        // ƒê·∫£m b·∫£o member c√≥ role Member
        if (!$memberUser->role_id || $memberUser->role_id !== $memberRole->role_id) {
            $memberUser->role_id = $memberRole->role_id;
            $memberUser->save();
        }

        $this->command->info("‚úÖ T√†i kho·∫£n admin:");
        $this->command->info("   Email: okr.admin@company.com");
        $this->command->info("   Role: Admin");
        $this->command->info("   User ID: {$adminUser->user_id}");
        $this->command->info("   ‚ö†Ô∏è  C·∫ßn t·∫°o user trong AWS Cognito v·ªõi email n√†y");
        $this->command->info("   üìù Password ph·∫£i c√≥: uppercase, lowercase, s·ªë, k√Ω t·ª± ƒë·∫∑c bi·ªát");

        $this->command->info("‚úÖ Member:");
        $this->command->info("   Email: anh249205@gmail.com");
        $this->command->info("   Role: Member");
        $this->command->info("   User ID: {$memberUser->user_id}");

        $this->command->info("‚úÖ Quy·ªÅn h·∫°n:");
        $this->command->info("   - Admin: Truy c·∫≠p Users, c√≥ th·ªÉ ch·ªâ ƒë·ªãnh vai tr√≤ cho m·ªçi ng∆∞·ªùi");
        $this->command->info("   - Manager: T·∫°o OKR c·∫•p c√¥ng ty/ph√≤ng ban, kh√¥ng truy c·∫≠p Users");
        $this->command->info("   - Member: Ch·ªâ t·∫°o OKR c√° nh√¢n");
    }
}
